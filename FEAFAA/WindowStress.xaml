<Window x:Class="WindowStress"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    Title="Stress Post-Process" Height="613" Width="808">
    <Grid>
        <DockPanel  >

            <DockPanel DockPanel.Dock="Top" Height="200" Margin="65 10 65 10">

                <DockPanel DockPanel.Dock="Top" Width="280">
                    <Label DockPanel.Dock="Top" x:Name="lblFieldPoint" Content="Field Point:" FontWeight="Bold" Height="25"/>
                    <TextBox DockPanel.Dock="Top" x:Name="txtFieldPointDirectory"  TextWrapping="Wrap" AcceptsReturn="True" ScrollViewer.VerticalScrollBarVisibility="Auto" Background="White" Height="25" IsReadOnly="true"/>

                    <DockPanel DockPanel.Dock="left" Width="190" >
                        <DataGrid x:Name="grdFieldPoint" ItemsSource="{Binding}" AutoGenerateColumns="False" SelectionMode="Single" SelectionUnit="FullRow" IsSynchronizedWithCurrentItem="True" CanUserResizeRows="False"  CanUserDeleteRows="False" CanUserAddRows="False" IsReadOnly="False" >

                            <DataGrid.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Style.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Background" Value="#FF3399FF" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.CellStyle>

                            <DataGrid.Columns>
                                <DataGridTextColumn Width="30"   Header="#" Binding="{Binding IndexFieldPoint}" CanUserSort="False" CanUserResize="False" IsReadOnly="true">
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style TargetType="DataGridColumnHeader">
                                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Width="50"  TextBlock.TextAlignment="Right" Header="x" Binding="{Binding xFieldPoint}" CanUserSort="False" CanUserResize="False">
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style TargetType="DataGridColumnHeader">
                                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="HorizontalAlignment" Value="Right" />
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Width="50" TextBlock.TextAlignment="Right" Header="y" Binding="{Binding yFieldPoint}" CanUserSort="False" CanUserResize="False">
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style TargetType="DataGridColumnHeader">
                                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="HorizontalAlignment" Value="Right" />
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>
                                <DataGridTextColumn Width="50" TextBlock.TextAlignment="Right" Header="z" Binding="{Binding zFieldPoint}" CanUserSort="False" CanUserResize="False" >
                                    <DataGridTextColumn.HeaderStyle>
                                        <Style TargetType="DataGridColumnHeader">
                                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                        </Style>
                                    </DataGridTextColumn.HeaderStyle>
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="HorizontalAlignment" Value="Right" />
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </DockPanel>

                    <DockPanel DockPanel.Dock="right" >
                        <Grid >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Border Grid.Row="0">
                                <Button x:Name="btnAddFieldPoint" Content="Add"/>
                            </Border>
                            <Border Grid.Row="1">
                                <Button x:Name="btnRemoveFieldPoint" Content="Remove"/>
                            </Border>
                            <Border Grid.Row="2">
                                <Button x:Name="btnNewFieldPoint" Content="New"/>
                            </Border>
                            <Border Grid.Row="3">
                                <Button x:Name="btn3" Content="" IsEnabled="False"  />
                            </Border>
                            <Border Grid.Row="4">
                                <Button x:Name="btnOpenFieldPoint" Content="Open"  />
                            </Border>
                            <Border  Grid.Row="5" >
                                <Button x:Name="btnSaveFieldPoint"  Content="Save"  />
                            </Border>  
                        </Grid>
                    </DockPanel>
                </DockPanel>

                <DockPanel DockPanel.Dock="right" Margin="30 0 0 0" Visibility="Hidden"  >
                    <CheckBox DockPanel.Dock="Top" x:Name="ChkResidualStress" FontWeight="Bold" Content="Residual Stress:"  Height="25"/>
                    <TextBox DockPanel.Dock="Top" x:Name="txtResidualStressDirectory"  TextWrapping="Wrap" AcceptsReturn="True" ScrollViewer.VerticalScrollBarVisibility="Auto" Background="White" Height="25" IsReadOnly="true"/>
                    <DataGrid x:Name="grdResidualStress" ItemsSource="{Binding ResidualStressTable}" ColumnWidth="70"  AutoGenerateColumns="True" SelectionMode="Single" SelectionUnit="FullRow" IsSynchronizedWithCurrentItem="True" CanUserResizeRows="False" CanUserDeleteRows="False" CanUserAddRows="False" IsReadOnly="true">
                        <DataGrid.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="#FF3399FF" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.CellStyle>
                    </DataGrid>
                </DockPanel>
            </DockPanel>

            <DockPanel DockPanel.Dock="bottom" Height="60">
                <Button x:Name="cmdExit" Width="80" Height="40" Content="Exit" />
            </DockPanel>

            <DockPanel DockPanel.Dock="Bottom" Margin="50,10,50,0">
                <DockPanel DockPanel.Dock="Top">
                    <Grid >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="150"/>
                            <ColumnDefinition Width="150"/>
                            <ColumnDefinition Width="150"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <Border >
                            <Button x:Name="btnOutputStress"  Content="Output Stress" Margin="16,-5,28,5"  />
                        </Border>
                        <Border Grid.Column="1" >
                            <RadioButton x:Name="optLoadInducedStress" Content="Load Induced Stress" Height="18" Visibility="Hidden" />
                        </Border>
                        <Border Grid.Column="2">
                            <RadioButton x:Name="optTotalStress" Content="Total Stress" Width="106" Height="18" Grid.Column="1" Visibility="Hidden" />
                        </Border>
                    </Grid>
                </DockPanel>


                <DataGrid DockPanel.Dock="Bottom" x:Name="grdStressOutPut" ItemsSource="{Binding}" AutoGenerateColumns="False" SelectionMode="Single" SelectionUnit="Cell" IsSynchronizedWithCurrentItem="True" CanUserResizeRows="False" CanUserDeleteRows="False" CanUserAddRows="False" IsReadOnly="true">
                    <DataGrid.Columns>
                        <DataGridTextColumn Width="100"   Header="Gear Position #" Binding="{Binding IdxStep}" CanUserSort="False" CanUserResize="False" >
                            <DataGridTextColumn.HeaderStyle>
                                <Style TargetType="DataGridColumnHeader">
                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                </Style>
                            </DataGridTextColumn.HeaderStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Width="100"  TextBlock.TextAlignment="Right" Header="sig-xx" Binding="{Binding StressXX}" CanUserSort="False" CanUserResize="False" >
                            <DataGridTextColumn.HeaderStyle>
                                <Style TargetType="DataGridColumnHeader">
                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                </Style>
                            </DataGridTextColumn.HeaderStyle>
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="HorizontalAlignment" Value="Right" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Width="100" TextBlock.TextAlignment="Right" Header="sig-yy" Binding="{Binding StressYY}" CanUserSort="False" CanUserResize="False" >
                            <DataGridTextColumn.HeaderStyle>
                                <Style TargetType="DataGridColumnHeader">
                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                </Style>
                            </DataGridTextColumn.HeaderStyle>
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="HorizontalAlignment" Value="Right" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Width="100" TextBlock.TextAlignment="Right" Header="sig-zz" Binding="{Binding StressZZ}" CanUserSort="False" CanUserResize="False" >
                            <DataGridTextColumn.HeaderStyle>
                                <Style TargetType="DataGridColumnHeader">
                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                </Style>
                            </DataGridTextColumn.HeaderStyle>
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="HorizontalAlignment" Value="Right" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Width="100" TextBlock.TextAlignment="Right" Header="sig-xy" Binding="{Binding StressXY}" CanUserSort="False" CanUserResize="False" IsReadOnly="True">
                            <DataGridTextColumn.HeaderStyle>
                                <Style TargetType="DataGridColumnHeader">
                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                </Style>
                            </DataGridTextColumn.HeaderStyle>
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="HorizontalAlignment" Value="Right" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Width="100" TextBlock.TextAlignment="Right" Header="sig-yz" Binding="{Binding StressYZ}" CanUserSort="False" CanUserResize="False" IsReadOnly="True">
                            <DataGridTextColumn.HeaderStyle>
                                <Style TargetType="DataGridColumnHeader">
                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                </Style>
                            </DataGridTextColumn.HeaderStyle>
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="HorizontalAlignment" Value="Right" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Width="100" TextBlock.TextAlignment="Right" Header="sig-xz" Binding="{Binding StressXZ}" CanUserSort="False" CanUserResize="False" IsReadOnly="True">
                            <DataGridTextColumn.HeaderStyle>
                                <Style TargetType="DataGridColumnHeader">
                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                </Style>
                            </DataGridTextColumn.HeaderStyle>
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="HorizontalAlignment" Value="Right" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </DockPanel>

        </DockPanel>
    </Grid>
</Window>
